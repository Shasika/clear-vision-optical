name: Continuous Integration

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install frontend dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint

    - name: Build frontend
      run: npm run build

    - name: Run frontend tests (if any)
      run: npm test --if-present

  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: server/package-lock.json

    - name: Install backend dependencies
      run: |
        cd server
        npm ci

    - name: Run backend tests (if any)
      run: |
        cd server
        npm test --if-present

    - name: Test server startup
      run: |
        cd server
        timeout 10s npm start || code=$?; if [[ $code -ne 124 && $code -ne 0 ]]; then exit $code; fi

  build-check:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install frontend dependencies
      run: npm ci

    - name: Install backend dependencies
      run: |
        cd server
        npm ci

    - name: Build frontend
      run: npm run build

    - name: Check build artifacts
      run: |
        if [ ! -d "dist" ]; then
          echo "‚ùå Frontend build failed - dist directory not found"
          exit 1
        fi
        
        if [ ! -f "dist/index.html" ]; then
          echo "‚ùå Frontend build failed - index.html not found"
          exit 1
        fi
        
        echo "‚úÖ Frontend build successful"
        
        echo "üìÅ Build artifacts:"
        ls -la dist/
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          dist/
          server/
        retention-days: 1